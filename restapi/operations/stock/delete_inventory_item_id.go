// Code generated by go-swagger; DO NOT EDIT.

package stock

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteInventoryItemIDHandlerFunc turns a function with the right signature into a delete inventory item ID handler
type DeleteInventoryItemIDHandlerFunc func(DeleteInventoryItemIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteInventoryItemIDHandlerFunc) Handle(params DeleteInventoryItemIDParams) middleware.Responder {
	return fn(params)
}

// DeleteInventoryItemIDHandler interface for that can handle valid delete inventory item ID params
type DeleteInventoryItemIDHandler interface {
	Handle(DeleteInventoryItemIDParams) middleware.Responder
}

// NewDeleteInventoryItemID creates a new http.Handler for the delete inventory item ID operation
func NewDeleteInventoryItemID(ctx *middleware.Context, handler DeleteInventoryItemIDHandler) *DeleteInventoryItemID {
	return &DeleteInventoryItemID{Context: ctx, Handler: handler}
}

/*DeleteInventoryItemID swagger:route DELETE /inventory/{itemId} Stock deleteInventoryItemId

delete an item

*/
type DeleteInventoryItemID struct {
	Context *middleware.Context
	Handler DeleteInventoryItemIDHandler
}

func (o *DeleteInventoryItemID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteInventoryItemIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
