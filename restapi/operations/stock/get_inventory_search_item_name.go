// Code generated by go-swagger; DO NOT EDIT.

package stock

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetInventorySearchItemNameHandlerFunc turns a function with the right signature into a get inventory search item name handler
type GetInventorySearchItemNameHandlerFunc func(GetInventorySearchItemNameParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetInventorySearchItemNameHandlerFunc) Handle(params GetInventorySearchItemNameParams) middleware.Responder {
	return fn(params)
}

// GetInventorySearchItemNameHandler interface for that can handle valid get inventory search item name params
type GetInventorySearchItemNameHandler interface {
	Handle(GetInventorySearchItemNameParams) middleware.Responder
}

// NewGetInventorySearchItemName creates a new http.Handler for the get inventory search item name operation
func NewGetInventorySearchItemName(ctx *middleware.Context, handler GetInventorySearchItemNameHandler) *GetInventorySearchItemName {
	return &GetInventorySearchItemName{Context: ctx, Handler: handler}
}

/* GetInventorySearchItemName swagger:route GET /inventory/search/{itemName} Stock getInventorySearchItemName

get item by name

*/
type GetInventorySearchItemName struct {
	Context *middleware.Context
	Handler GetInventorySearchItemNameHandler
}

func (o *GetInventorySearchItemName) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetInventorySearchItemNameParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
